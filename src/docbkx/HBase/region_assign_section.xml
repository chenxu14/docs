<?xml version="1.0" encoding="UTF-8"?>
<section version="5.0" xmlns="http://docbook.org/ns/docbook"
	xmlns:xlink="http://www.w3.org/1999/xlink"
	xmlns:xi="http://www.w3.org/2001/XInclude"
	xmlns:ns5="http://www.w3.org/2000/svg"
	xmlns:ns4="http://www.w3.org/1998/Math/MathML"
	xmlns:ns3="http://www.w3.org/1999/xhtml"
	xmlns:db="http://docbook.org/ns/docbook">
	<title>Region分配调整</title>
	<para>针对集群整体shutdown的场景，原生实现里不需要对RS的部署环境进行考量，可以随机挑选一台处于online状态的RS进行部署。但是基于新方案部署之后，有关primary的分配不能再像之前一样随机不加约束，而是只能挑选之前部署过相关Replica的机器。如果不在这些机器上分配，memstore中的数据将无法回放，因此需要对Region的分配逻辑做些调整。</para>
	<para>首先在RS启动过程中需要做如下处理：</para>
	<para>遍历持久层memstore中的每一个chunk，由chunk定位到其所属region，然后将region信息发送到HMaster端去做如下判断处理，如果目标Region满足如下条件约束，则RS端没有必要对Chunk数据进行保留。</para>
	<orderedlist>
		<listitem><para>Master端显示目标Region的所有副本都处于健康状态。</para></listitem>
		<listitem><para>META表格中所标识的region地址不包含当前启动的RS。</para></listitem>
	</orderedlist>
	<para>如果不满足以上要求，RS端需要对chunk数据进行保留，因为后续primary是有机率分配到该RS进行部署的。同时RS端还需开启一个后台线程来周期性的检测目标Region是否满足上述要求，以便对无用的Chunk数据做及时的回收处理。</para>
	<para>另外在RS宕机的时候，Master端需要做如下判断处理：</para>
	<orderedlist>
		<listitem>
			<para>如果集群中还有两个Replica(包括primary)处于健康状态，则可随机选择一台RS来进行Replica分配。</para>
			<para>因为这时即使primary宕掉，还有一个健康的Replica可以接管。</para>
		</listitem>
		<listitem>
			<para>而如果集群中只有primary处于健康状态，那么Replica不能在做随机分配处理，只能做循环retry，尝试分配到之前部署的机器上，并在分配过程中将自己标记成“过度”状态(primary宕机次优先选取”过度”状态的Replica)。</para>
			<para>每次retry之前会重新进行判断，如果发现处于健康状态的Replica已经达到两个，则将“过度”状态移除，然后随机分配到一台RS即可。</para>
			<tip>如果存在“过度”状态的Replica，Region写入一定是阻塞的，因为不满足min-replica需求，因此“过度”状态的Replica分配完成以后，无需对primary触发flush操作，因其之前是健康的，并且宕掉之后也没有新数据写入。</tip>
		</listitem>
		<listitem>
			<para>如果是primary宕掉，则需要根据当前处于健康状态的Replica数量来做接下来的考量。</para>
			<itemizedlist>
				<listitem><para>如果存在两个健康状态的Replica，选择其中一个热切成Primary，在随机选一台RS部署剩下的Replica</para></listitem>
				<listitem>
					<para>如果只有一个健康状态的Replica，先将其热切成primary，然后做如下判断处理。</para>
					<para>(1)如果已经存在处于”过度”状态的Replica，则任选一台RS部署一个Replica。</para>
					<para>(2)如果没有处于“过度”状态的Replica，将要分配的Replica标记成“过度”态，并在之前部署primary的机器上部署。</para>
				</listitem>
				<listitem>
					<para>如果没有处于健康状态的Replica，则不断retry尝试分配到自己之前的机器上。</para>
					<para>如果retry过程中发现有Replica处于了健康的状态(之前处于“过度”状态的Replica分配完成)，对其触发热切逻辑，然后继续步骤b的判断处理。</para>
				</listitem>
			</itemizedlist>
		</listitem>
	</orderedlist>
	<para>最后master启动的时候，需要调整如下分配规则。</para>
	<orderedlist>
		<listitem>
			<para>首先对primary进行分配处理，只有primary分配完成以后在对replica进行分配(因为Replica加载之后需要对primary触发flush事件)</para>
			<para>primary分配过程中，可选的RS包括之前部署该primary的机器以及META表格中处于健康和过度状态的Replica所在的机器。</para>
		</listitem>
		<listitem>
			<para>primary分配成功以后，开始对Replica进行分配处理。</para>
			<para>优先分配到其之前部署的RS上，如果不满足部署条件则按如下方式处理。</para>
			<itemizedlist>
				<listitem>
					<para>如果当前处于健康状态的Replica(包括primary)低于2个，只在如下机器中选择部署Replica</para>
					<para>(1)之前Replica处于”健康/过度”状态的机器。</para>
					<para>(2)之前部署primary的机器。</para>
				</listitem>
				<listitem><para>如果处于健康状态的Replica已经达到两个，则可随机选择RS进行部署。</para></listitem>
			</itemizedlist>
		</listitem>
	</orderedlist>
</section>